---
// src/components/dashboard/DashboardLayout.astro
export interface Props {
  title: string;
  user?: any;
  imagingCenter?: any;
}

const { title, user, imagingCenter } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} | USRad Dashboard</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Manrope:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              "usrad-navy": "#003087",
              "usrad-gold": "#cc9933",
              "usrad-light": "#f5f9ff",
            },
            fontFamily: {
              sans: ["Manrope", "system-ui", "sans-serif"],
            },
          },
        },
      };
    </script>
    <style>
      body {
        font-family: "Manrope", sans-serif;
        overflow-x: hidden;
      }

      .sidebar-transition {
        transition:
          transform 0.3s ease-in-out,
          width 0.3s ease-in-out;
      }

      .nav-link {
        transition: all 0.2s ease;
      }

      .nav-link:hover {
        background: rgba(204, 153, 51, 0.1);
        border-left: 4px solid #cc9933;
      }

      .nav-link.active {
        background: rgba(204, 153, 51, 0.15);
        border-left: 4px solid #cc9933;
        color: #cc9933;
      }

      .dashboard-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(0, 48, 135, 0.08);
        transition: all 0.2s ease;
      }

      .dashboard-card:hover {
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
      }

      .mobile-menu-open {
        transform: translateX(0);
      }

      .mobile-menu-closed {
        transform: translateX(-100%);
      }
    </style>
  </head>

  <body class="bg-gray-50">
    <!-- Mobile Menu Overlay -->
    <div
      id="mobile-overlay"
      class="fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden hidden"
    >
    </div>

    <!-- Sidebar -->
    <aside
      id="sidebar"
      class="fixed top-0 left-0 z-50 w-64 h-screen bg-usrad-navy text-white sidebar-transition mobile-menu-closed lg:mobile-menu-open lg:translate-x-0"
    >
      <!-- Logo -->
      <div
        class="flex items-center justify-between p-6 border-b border-blue-800"
      >
        <div class="flex items-center space-x-3">
          <img
            src="/logo/USRad-Logo-final-white-text-imaging-center-log-in.png"
            alt="USRad"
            class="h-8"
          />
        </div>
        <button
          id="close-sidebar"
          class="lg:hidden text-white hover:text-usrad-gold"
        >
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <!-- User Info -->
      {
        user && (
          <div class="p-4 border-b border-blue-800">
            <div class="flex items-center space-x-3">
              <div class="w-10 h-10 bg-usrad-gold rounded-full flex items-center justify-center font-semibold text-usrad-navy">
                {user.firstName?.[0] || user.email[0].toUpperCase()}
              </div>
              <div>
                <p class="font-medium text-sm">
                  {user.firstName && user.lastName
                    ? `${user.firstName} ${user.lastName}`
                    : user.email}
                </p>
                {imagingCenter && (
                  <p class="text-xs text-blue-200">{imagingCenter.name}</p>
                )}
              </div>
            </div>
          </div>
        )
      }

      <!-- Navigation -->
      <nav class="flex-1 px-4 py-6">
        <ul class="space-y-2">
          <li>
            <a
              href="/dashboard"
              class="nav-link flex items-center px-4 py-3 rounded-lg text-sm font-medium"
            >
              <svg
                class="w-5 h-5 mr-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"
                ></path>
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z"></path>
              </svg>
              Dashboard
            </a>
          </li>
          <li>
            <a
              href="/dashboard/appointments"
              class="nav-link flex items-center px-4 py-3 rounded-lg text-sm font-medium"
            >
              <svg
                class="w-5 h-5 mr-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                ></path>
              </svg>
              Appointments
            </a>
          </li>
          <li>
            <a
              href="/dashboard/analytics"
              class="nav-link flex items-center px-4 py-3 rounded-lg text-sm font-medium"
            >
              <svg
                class="w-5 h-5 mr-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                ></path>
              </svg>
              Analytics
            </a>
          </li>
          <li>
            <a
              href="/dashboard/settings"
              class="nav-link flex items-center px-4 py-3 rounded-lg text-sm font-medium"
            >
              <svg
                class="w-5 h-5 mr-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                ></path>
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              Settings
            </a>
          </li>
        </ul>
      </nav>

      <!-- Logout -->
      <div class="p-4 border-t border-blue-800">
        <form action="/api/auth/logout" method="POST">
          <button
            type="submit"
            class="w-full flex items-center px-4 py-3 text-sm font-medium text-white hover:bg-red-600 rounded-lg transition-colors"
          >
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
              ></path>
            </svg>
            Sign Out
          </button>
        </form>
      </div>
    </aside>

    <!-- Main Content -->
    <div class="lg:ml-64">
      <!-- Top Bar -->
      <header class="bg-white shadow-sm border-b border-gray-200 px-6 py-4">
        <div class="flex items-center justify-between">
          <div class="flex items-center">
            <button
              id="menu-toggle"
              class="lg:hidden text-gray-600 hover:text-usrad-navy mr-4"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"></path>
              </svg>
            </button>
            <h1 class="text-2xl font-semibold text-usrad-navy">{title}</h1>
          </div>

          <div class="flex items-center space-x-4">
            <!-- Notifications -->
            <button class="relative text-gray-600 hover:text-usrad-navy">
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9"
                ></path>
              </svg>
              <span
                class="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center"
                >3</span
              >
            </button>

            <!-- Profile Dropdown -->
            <div class="relative">
              <button
                class="flex items-center space-x-2 text-gray-600 hover:text-usrad-navy"
              >
                <div
                  class="w-8 h-8 bg-usrad-gold rounded-full flex items-center justify-center font-semibold text-usrad-navy text-sm"
                >
                  {user?.firstName?.[0] || user?.email[0].toUpperCase() || "U"}
                </div>
              </button>
            </div>
          </div>
        </div>
      </header>

      <!-- Page Content -->
      <main class="p-6">
        <slot />
      </main>
    </div>

    <script>
      // Mobile menu functionality
      const menuToggle = document.getElementById("menu-toggle");
      const closeSidebar = document.getElementById("close-sidebar");
      const sidebar = document.getElementById("sidebar");
      const overlay = document.getElementById("mobile-overlay");

      function openSidebar() {
        sidebar.classList.remove("mobile-menu-closed");
        sidebar.classList.add("mobile-menu-open");
        overlay.classList.remove("hidden");
      }

      function closeSidebarFn() {
        sidebar.classList.remove("mobile-menu-open");
        sidebar.classList.add("mobile-menu-closed");
        overlay.classList.add("hidden");
      }

      menuToggle?.addEventListener("click", openSidebar);
      closeSidebar?.addEventListener("click", closeSidebarFn);
      overlay?.addEventListener("click", closeSidebarFn);

      // Close sidebar on window resize if desktop
      window.addEventListener("resize", () => {
        if (window.innerWidth >= 1024) {
          closeSidebarFn();
        }
      });

      // Active navigation highlighting
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll(".nav-link");

      navLinks.forEach((link) => {
        if (link.getAttribute("href") === currentPath) {
          link.classList.add("active");
        }
      });
    </script>
  </body>
</html>
