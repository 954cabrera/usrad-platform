---
import DashboardLayout from "../../../components/dashboard/DashboardLayout.astro";
---

<DashboardLayout title="Exhibit B Preview" user={null}>
  <div class="max-w-6xl mx-auto p-6 space-y-8">
    <!-- Header Section -->
    <div class="text-center space-y-4">
      <h1 class="text-3xl font-bold text-gray-900">Exhibit B Preview</h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        Preview your facility-specific Exhibit B document that will be delivered after PSA signing
      </p>
    </div>

    <!-- Document Controls -->
    <div class="bg-white rounded-lg shadow-sm border p-6">
      <div class="flex justify-between items-center mb-6">
        <div>
          <h2 class="text-xl font-semibold text-gray-900">Document Structure</h2>
          <p class="text-sm text-gray-600 mt-1" id="layout-description">Loading layout information...</p>
        </div>
        
        <div class="flex space-x-3">
          <button 
            id="download-pdf"
            class="bg-blue-600 hover:bg-blue-700 text-white font-semibold px-4 py-2 rounded-lg transition-colors duration-200 flex items-center"
          >
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"></path>
            </svg>
            Download PDF
          </button>
          
          <button 
            id="print-preview"
            class="bg-gray-600 hover:bg-gray-700 text-white font-semibold px-4 py-2 rounded-lg transition-colors duration-200 flex items-center"
          >
            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M5 4v3H4a2 2 0 00-2 2v3a2 2 0 002 2h1v2a2 2 0 002 2h6a2 2 0 002-2v-2h1a2 2 0 002-2V9a2 2 0 00-2-2h-1V4a2 2 0 00-2-2H7a2 2 0 00-2 2zm8 0H7v3h6V4zM5 14H4v-3h1v3zm4 4H7v-3h2v3zm4 0v-3h2v3h-2z" clip-rule="evenodd"></path>
            </svg>
            Print Preview
          </button>
        </div>
      </div>

      <!-- Page Navigation -->
      <div class="flex justify-between items-center mb-4" id="page-navigation" style="display: none;">
        <button 
          id="prev-page"
          class="bg-gray-300 hover:bg-gray-400 text-gray-700 px-3 py-1 rounded disabled:opacity-50 disabled:cursor-not-allowed"
          disabled
        >
          ← Previous
        </button>
        
        <span id="page-info" class="text-sm text-gray-600">Page 1 of 1</span>
        
        <button 
          id="next-page"
          class="bg-gray-300 hover:bg-gray-400 text-gray-700 px-3 py-1 rounded disabled:opacity-50 disabled:cursor-not-allowed"
          disabled
        >
          Next →
        </button>
      </div>
    </div>

    <!-- Document Preview Container -->
    <div class="bg-white rounded-lg shadow-lg border">
      <!-- Cover Page -->
      <div id="cover-page" class="exhibit-page p-8 border-b border-gray-200">
        <div class="text-center space-y-6">
          <div class="space-y-2">
            <h1 class="text-3xl font-bold text-gray-900">EXHIBIT B</h1>
            <h2 class="text-xl text-gray-700">Facility Specifications</h2>
            <p class="text-gray-600">Addendum to Provider Service Agreement</p>
          </div>
          
          <div class="border-t border-b border-gray-300 py-6 my-8">
            <div class="grid md:grid-cols-2 gap-6 text-left max-w-2xl mx-auto">
              <div>
                <h3 class="font-semibold text-gray-900 mb-2">Corporate Entity</h3>
                <div id="cover-corporate-info" class="text-sm text-gray-700">
                  Loading...
                </div>
              </div>
              <div>
                <h3 class="font-semibold text-gray-900 mb-2">Agreement Details</h3>
                <div class="text-sm text-gray-700">
                  <div>Effective Date: <span id="cover-effective-date"></span></div>
                  <div>Total Facilities: <span id="cover-facility-count">0</span></div>
                  <div>Document Pages: <span id="cover-page-count">0</span></div>
                </div>
              </div>
            </div>
          </div>
          
          <div class="space-y-4">
            <div class="text-sm text-gray-600">
              This Exhibit B contains detailed specifications for all facilities covered under the Provider Service Agreement.
              Each facility listing includes location details, equipment specifications, and operational parameters.
            </div>
            
            <div class="bg-blue-50 p-4 rounded-lg text-sm text-blue-800">
              <strong>Note:</strong> This document is generated based on your current facility configuration. 
              Any changes to facility information will require an updated Exhibit B.
            </div>
          </div>
        </div>
      </div>

      <!-- Facility Pages Container -->
      <div id="facility-pages-container">
        <!-- Facility pages will be dynamically generated here -->
        <div class="p-8 text-center text-gray-500">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
          <p class="mt-2">Loading facility information...</p>
        </div>
      </div>
    </div>

    <!-- Back to Confirmation Button -->
    <div class="text-center">
      <button 
        onclick="window.location.href='/dashboard/contract/confirmation'"
        class="bg-gray-600 hover:bg-gray-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors duration-200"
      >
        ← Back to Confirmation
      </button>
    </div>
  </div>

  <style>
    .exhibit-page {
      min-height: 11in;
      max-width: 8.5in;
      margin: 0 auto;
      background: white;
    }
    
    .facility-grid-detailed {
      display: grid;
      grid-template-columns: 1fr;
      gap: 2rem;
    }
    
    .facility-grid-standard {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }
    
    .facility-grid-compact {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
    }
    
    .facility-grid-condensed {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 0.75rem;
    }
    
    .facility-grid-ultra-compact {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 0.5rem;
    }
    
    .facility-card {
      border: 1px solid #e5e7eb;
      border-radius: 0.5rem;
      padding: 1rem;
      background: #f9fafb;
    }
    
    .facility-card-compact {
      border: 1px solid #e5e7eb;
      border-radius: 0.25rem;
      padding: 0.75rem;
      background: #f9fafb;
    }
    
    .facility-card-condensed {
      border: 1px solid #e5e7eb;
      border-radius: 0.25rem;
      padding: 0.5rem;
      background: #f9fafb;
    }
    
    @media print {
      .exhibit-page {
        page-break-after: always;
        box-shadow: none;
        border: none;
      }
      
      #page-navigation,
      .bg-white.rounded-lg.shadow-sm.border {
        display: none !important;
      }
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let facilities = [];
      let currentPage = 1;
      let totalPages = 1;
      let layoutType = 'detailed';
      let facilitiesPerPage = 1;
      
      // Load and render exhibit B
      loadExhibitB();
      
      // Setup event listeners
      setupEventListeners();
      
      async function loadExhibitB() {
        try {
          // Wait for USRadUser to be available
          if (!window.USRadUser || !window.USRadUser.user) {
            setTimeout(loadExhibitB, 100);
            return;
          }

          const user = window.USRadUser.user;
          const supabase = window.USRadUser.supabase;

          // Load corporate entity information
          const { data: corporateInfo } = await supabase
            .from('corporate_entities')
            .select('*')
            .eq('user_id', user.id)
            .single();

          // Load facilities
          const { data: facilitiesData } = await supabase
            .from('user_facilities')
            .select('*')
            .eq('user_id', user.id)
            .order('is_primary', { ascending: false });

          facilities = facilitiesData || [];
          
          // Determine layout and pagination
          determineLayout();
          
          // Populate cover page
          populateCoverPage(corporateInfo, user);
          
          // Generate facility pages
          generateFacilityPages();
          
          // Setup navigation
          setupNavigation();
          
        } catch (error) {
          console.error('Error loading Exhibit B:', error);
          showErrorState();
        }
      }
      
      function determineLayout() {
        const facilityCount = facilities.length;
        
        if (facilityCount <= 4) {
          layoutType = 'detailed';
          facilitiesPerPage = 1;
        } else if (facilityCount <= 12) {
          layoutType = 'standard';
          facilitiesPerPage = 6;
        } else if (facilityCount <= 50) {
          layoutType = 'compact';
          facilitiesPerPage = 12;
        } else if (facilityCount <= 150) {
          layoutType = 'condensed';
          facilitiesPerPage = 18;
        } else {
          layoutType = 'ultra-compact';
          facilitiesPerPage = 25;
        }
        
        totalPages = Math.ceil(facilityCount / facilitiesPerPage) + 1; // +1 for cover page
        
        // Update layout description
        const layoutDescriptions = {
          'detailed': 'Detailed layout - All facilities on single page',
          'standard': 'Standard layout - 6 facilities per page',
          'compact': 'Compact layout - 12 facilities per page',
          'condensed': 'Condensed layout - 18 facilities per page',
          'ultra-compact': 'Ultra-compact layout - 25 facilities per page'
        };
        
        document.getElementById('layout-description').textContent = 
          `${layoutDescriptions[layoutType]} (${facilityCount} total facilities)`;
      }
      
      function populateCoverPage(corporateInfo, user) {
        // Corporate information
        const corporateInfoHtml = corporateInfo ? `
          <div>${corporateInfo.legal_name || 'N/A'}</div>
          <div>${corporateInfo.legal_entity_name || ''}</div>
          <div>Tax ID: ${corporateInfo.tax_id || 'N/A'}</div>
        ` : `
          <div>${user.user_metadata?.full_name || 'Individual Practice'}</div>
          <div>${user.email}</div>
        `;
        
        document.getElementById('cover-corporate-info').innerHTML = corporateInfoHtml;
        document.getElementById('cover-effective-date').textContent = new Date().toLocaleDateString();
        document.getElementById('cover-facility-count').textContent = facilities.length;
        document.getElementById('cover-page-count').textContent = totalPages;
      }
      
      function generateFacilityPages() {
        const container = document.getElementById('facility-pages-container');
        container.innerHTML = '';
        
        if (facilities.length === 0) {
          container.innerHTML = `
            <div class="p-8 text-center text-gray-500">
              <p>No facilities configured. Please add facilities before generating Exhibit B.</p>
            </div>
          `;
          return;
        }
        
        // Group facilities into pages
        const facilityPages = [];
        for (let i = 0; i < facilities.length; i += facilitiesPerPage) {
          facilityPages.push(facilities.slice(i, i + facilitiesPerPage));
        }
        
        facilityPages.forEach((pageFacilities, pageIndex) => {
          const pageElement = createFacilityPage(pageFacilities, pageIndex + 2); // +2 because cover page is page 1
          container.appendChild(pageElement);
        });
      }
      
      function createFacilityPage(pageFacilities, pageNumber) {
        const pageDiv = document.createElement('div');
        pageDiv.className = 'exhibit-page facility-page p-8 border-b border-gray-200';
        pageDiv.dataset.page = pageNumber;
        
        // Page header
        const headerHtml = `
          <div class="flex justify-between items-center mb-6 border-b pb-4">
            <h2 class="text-xl font-semibold text-gray-900">Facility Listings</h2>
            <span class="text-sm text-gray-500">Page ${pageNumber} of ${totalPages}</span>
          </div>
        `;
        
        // Create facility grid
        const gridClass = `facility-grid-${layoutType.replace('-', '-')}`;
        const facilitiesHtml = pageFacilities.map(facility => createFacilityCard(facility)).join('');
        
        pageDiv.innerHTML = `
          ${headerHtml}
          <div class="${gridClass}">
            ${facilitiesHtml}
          </div>
        `;
        
        return pageDiv;
      }
      
      function createFacilityCard(facility) {
        const cardClass = layoutType === 'detailed' ? 'facility-card' : 
                          layoutType === 'standard' ? 'facility-card' :
                          layoutType === 'compact' ? 'facility-card-compact' :
                          'facility-card-condensed';
        
        const primaryBadge = facility.is_primary ? 
          '<span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full mb-2">Primary</span>' : '';
        
        if (layoutType === 'detailed') {
          return `
            <div class="${cardClass}">
              ${primaryBadge}
              <h3 class="font-semibold text-gray-900 mb-2">${facility.facility_name}</h3>
              <div class="space-y-2 text-sm text-gray-700">
                <div><strong>Address:</strong><br>
                  ${facility.street_address}<br>
                  ${facility.city}, ${facility.state} ${facility.zip_code}
                </div>
                ${facility.acr_facility_id ? `<div><strong>ACR ID:</strong> ${facility.acr_facility_id}</div>` : ''}
                ${facility.modalities ? `<div><strong>Modalities:</strong> ${facility.modalities}</div>` : ''}
                ${facility.equipment_brands ? `<div><strong>Equipment:</strong> ${facility.equipment_brands}</div>` : ''}
                <div><strong>ACR Verified:</strong> ${facility.is_acr_verified ? 'Yes' : 'No'}</div>
              </div>
            </div>
          `;
        } else if (layoutType === 'standard') {
          return `
            <div class="${cardClass}">
              ${primaryBadge}
              <h3 class="font-semibold text-gray-900 mb-2 text-sm">${facility.facility_name}</h3>
              <div class="space-y-1 text-xs text-gray-700">
                <div>${facility.street_address}</div>
                <div>${facility.city}, ${facility.state} ${facility.zip_code}</div>
                ${facility.modalities ? `<div><strong>Modalities:</strong> ${facility.modalities}</div>` : ''}
                ${facility.acr_facility_id ? `<div><strong>ACR ID:</strong> ${facility.acr_facility_id}</div>` : ''}
              </div>
            </div>
          `;
        } else {
          return `
            <div class="${cardClass}">
              ${primaryBadge}
              <h3 class="font-semibold text-gray-900 mb-1 text-xs">${facility.facility_name}</h3>
              <div class="text-xs text-gray-700 space-y-1">
                <div>${facility.city}, ${facility.state}</div>
                ${facility.acr_facility_id ? `<div>ACR: ${facility.acr_facility_id}</div>` : ''}
              </div>
            </div>
          `;
        }
      }
      
      function setupNavigation() {
        const navigation = document.getElementById('page-navigation');
        
        if (totalPages > 1) {
          navigation.style.display = 'flex';
          updatePageNavigation();
        }
      }
      
      function updatePageNavigation() {
        const prevBtn = document.getElementById('prev-page');
        const nextBtn = document.getElementById('next-page');
        const pageInfo = document.getElementById('page-info');
        
        prevBtn.disabled = currentPage === 1;
        nextBtn.disabled = currentPage === totalPages;
        pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
        
        // Show/hide pages
        const allPages = document.querySelectorAll('.exhibit-page');
        allPages.forEach((page, index) => {
          if (index + 1 === currentPage) {
            page.style.display = 'block';
          } else {
            page.style.display = 'none';
          }
        });
      }
      
      function setupEventListeners() {
        // Page navigation
        document.getElementById('prev-page').addEventListener('click', () => {
          if (currentPage > 1) {
            currentPage--;
            updatePageNavigation();
          }
        });
        
        document.getElementById('next-page').addEventListener('click', () => {
          if (currentPage < totalPages) {
            currentPage++;
            updatePageNavigation();
          }
        });
        
        // Print functionality
        document.getElementById('print-preview').addEventListener('click', () => {
          // Show all pages for printing
          const allPages = document.querySelectorAll('.exhibit-page');
          allPages.forEach(page => page.style.display = 'block');
          
          window.print();
          
          // Restore page navigation after printing
          setTimeout(() => {
            updatePageNavigation();
          }, 1000);
        });
        
        // PDF download
        document.getElementById('download-pdf').addEventListener('click', () => {
          alert('PDF download functionality would be implemented here. This would generate a professional PDF version of the Exhibit B document.');
        });
      }
      
      function showErrorState() {
        const container = document.getElementById('facility-pages-container');
        container.innerHTML = `
          <div class="p-8 text-center text-red-500">
            <p>Error loading facility information. Please refresh the page and try again.</p>
          </div>
        `;
      }
    });
  </script>
</DashboardLayout>