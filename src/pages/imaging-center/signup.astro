---
// Imaging Center Signup with Supabase Auth
// Add this to the frontmatter at the top
const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="supabase-url" content={supabaseUrl} />
    <meta name="supabase-anon-key" content={supabaseAnonKey} />
    <title>Join USRad Network | Imaging Center Signup</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <!-- Import Supabase -->
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
    <style>
      *,
      *::before,
      *::after {
        box-sizing: border-box;
      }

      html,
      body {
        margin: 0;
        padding: 0;
        min-height: 100%;
        font-family:
          "Inter",
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          sans-serif;
        background: white;
        animation: fadeIn 0.6s ease;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .signup-layout {
        display: flex;
        min-height: 100vh;
      }

      .logo-side {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2.5rem 3rem 3.5rem 3rem;
        background: linear-gradient(135deg, #003087 0%, #001a4d 100%);
        position: relative;
        overflow: hidden;
      }

      .logo-side::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url("data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23e6c378' fill-opacity='0.03'%3E%3Cpath d='M40 40c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20zm20 0c0-11.046-8.954-20-20-20s-20 8.954-20 20 8.954 20 20 20 20-8.954 20-20z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
        opacity: 0.4;
        z-index: 0;
      }

      .brand-content {
        position: relative;
        z-index: 1;
        text-align: center;
        max-width: 450px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
      }

      .logo-side img {
        max-width: 200px;
        width: auto;
        height: auto;
        margin-bottom: 1.5rem;
        filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
        display: block;
      }

      .brand-title {
        color: white;
        font-size: 2.2rem;
        font-weight: 300;
        margin: 0 0 1.5rem 0;
        letter-spacing: -0.02em;
        line-height: 1.2;
      }

      .brand-tagline {
        color: rgba(255, 255, 255, 0.85);
        font-size: 1.05rem;
        font-weight: 400;
        letter-spacing: 0.3px;
        margin: 0;
        text-align: center;
        line-height: 1.6;
        max-width: 380px;
      }

      .form-side {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        background: white;
        padding: 2rem;
        position: relative;
        overflow-y: auto;
      }

      .back-nav {
        position: absolute;
        top: 1.5rem;
        left: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #64748b;
        text-decoration: none;
        font-size: 0.9rem;
        font-weight: 500;
        transition: color 0.2s ease;
      }

      .back-nav:hover {
        color: #003087;
      }

      .signup-box {
        width: 100%;
        max-width: 420px;
        padding: 1rem 0;
      }

      .form-header {
        margin-bottom: 2rem;
      }

      .form-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 0.5rem;
        letter-spacing: -0.02em;
      }

      .form-subtitle {
        color: #64748b;
        font-size: 1rem;
        line-height: 1.5;
      }

      .input-group {
        margin-bottom: 1.25rem;
      }

      .input-label {
        display: block;
        font-size: 0.9rem;
        font-weight: 500;
        color: #374151;
        margin-bottom: 0.5rem;
      }

      .asterisk {
        color: #e6c378;
        margin-left: 2px;
      }

      .input-wrapper {
        position: relative;
      }

      .form-input,
      .form-select {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1.5px solid #e2e8f0;
        border-radius: 8px;
        font-size: 1rem;
        transition: all 0.2s ease;
        background: #ffffff;
        font-family: "Inter", sans-serif;
      }

      .form-input:focus,
      .form-select:focus {
        outline: none;
        border-color: #003087;
        box-shadow: 0 0 0 3px rgba(0, 48, 135, 0.08);
      }

      .form-select {
        cursor: pointer;
        appearance: none;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        background-position: right 0.5rem center;
        background-repeat: no-repeat;
        background-size: 1.5em 1.5em;
        padding-right: 2.5rem;
      }

      .signup-button {
        width: 100%;
        padding: 0.875rem 1rem;
        background: #003087;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        position: relative;
        overflow: hidden;
        margin-bottom: 1.5rem;
        font-family: "Inter", sans-serif;
      }

      .signup-button:hover {
        background: #002268;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(0, 48, 135, 0.2);
      }

      .signup-button:active {
        transform: translateY(0);
      }

      .signup-button:disabled {
        background: #94a3b8;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
      }

      .terms-consent {
        display: flex;
        align-items: flex-start;
        gap: 0.75rem;
        margin-bottom: 1.5rem;
        font-size: 0.9rem;
        color: #64748b;
        line-height: 1.5;
      }

      .terms-checkbox {
        width: 18px;
        height: 18px;
        accent-color: #003087;
        margin-top: 0.125rem;
        flex-shrink: 0;
      }

      .terms-consent a {
        color: #003087;
        text-decoration: none;
        font-weight: 500;
      }

      .terms-consent a:hover {
        text-decoration: underline;
      }

      .login-link {
        text-align: center;
        color: #64748b;
        font-size: 0.9rem;
      }

      .login-link a {
        color: #003087;
        text-decoration: none;
        font-weight: 500;
      }

      .login-link a:hover {
        text-decoration: underline;
      }

      /* Error/Success Messages */
      .message {
        padding: 0.75rem 1rem;
        border-radius: 8px;
        margin-bottom: 1rem;
        font-size: 0.9rem;
        transition: all 0.3s ease;
      }

      .message.error {
        background: #fef2f2;
        color: #dc2626;
        border: 1px solid #fecaca;
      }

      .message.success {
        background: #f0fdf4;
        color: #16a34a;
        border: 1px solid #bbf7d0;
      }

      .message.info {
        background: #eff6ff;
        color: #2563eb;
        border: 1px solid #bfdbfe;
      }

      .message.hidden {
        display: none;
      }

      @media (max-width: 768px) {
        .signup-layout {
          flex-direction: column;
        }

        .logo-side {
          min-height: 220px;
          padding: 2rem 1rem;
          justify-content: center;
          padding-top: 2rem;
          padding-bottom: 2.5rem;
        }

        .brand-content {
          max-width: 100%;
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
        }

        .brand-title {
          font-size: 1.8rem;
          margin-bottom: 1rem;
          line-height: 1.2;
        }

        .brand-tagline {
          font-size: 0.95rem;
          display: block;
          max-width: 300px;
          line-height: 1.6;
        }

        .form-side {
          padding: 1.5rem;
        }

        .form-title {
          font-size: 1.5rem;
        }

        .logo-side img {
          max-width: 130px;
          margin-bottom: 1.2rem;
        }
      }
    </style>
  </head>
  <body>
    <div class="signup-layout">
      <div class="logo-side">
        <a href="/imaging-center" class="back-nav">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M19 12H5M12 19l-7-7 7-7"></path>
          </svg>
          Back to network info
        </a>

        <div class="brand-content">
          <img src="/logo/USRad-Logo-final-white-text.png" alt="USRad Logo" />
          <h1 class="brand-title">Join Our Network</h1>
          <p class="brand-tagline">
            Connect with 90+ million uninsured patients and grow your imaging
            center's revenue
          </p>
        </div>
      </div>

      <div class="form-side">
        <form class="signup-box" id="signup-form">
          <div class="form-header">
            <h2 class="form-title">Create your account</h2>
            <p class="form-subtitle">
              Join the USRad network and start growing your imaging center
            </p>
          </div>

          <!-- Error/Success Messages -->
          <div id="error-message" class="message error hidden"></div>
          <div id="success-message" class="message success hidden"></div>
          <div id="info-message" class="message info hidden"></div>

          <div class="input-group">
            <label for="center-name" class="input-label"
              >Imaging Center Name<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <input
                type="text"
                id="center-name"
                name="centerName"
                class="form-input"
                required
                placeholder="Advanced Imaging Center of Miami"
              />
            </div>
          </div>

          <div class="input-group">
            <label for="center-type" class="input-label"
              >Center Type<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <select
                id="center-type"
                name="centerType"
                class="form-select"
                required
              >
                <option value="">Select center type</option>
                <option value="independent">Independent Imaging Center</option>
                <option value="hospital_outpatient">Hospital Outpatient</option>
                <option value="multi_location">Multi-Location Chain</option>
                <option value="mobile">Mobile Imaging</option>
                <option value="other">Other</option>
              </select>
            </div>
          </div>

          <div class="input-group">
            <label for="contact-name" class="input-label"
              >Primary Contact Name<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <input
                type="text"
                id="contact-name"
                name="contactName"
                class="form-input"
                required
                placeholder="John Smith"
              />
            </div>
          </div>

          <div class="input-group">
            <label for="email" class="input-label"
              >Work Email<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <input
                type="email"
                id="email"
                name="email"
                class="form-input"
                required
                placeholder="admin@imagingcenter.com"
              />
            </div>
          </div>

          <div class="input-group">
            <label for="phone" class="input-label"
              >Phone Number<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <input
                type="tel"
                id="phone"
                name="phone"
                class="form-input"
                required
                placeholder="(555) 123-4567"
              />
            </div>
          </div>

          <div class="input-group">
            <label for="password" class="input-label"
              >Password<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <input
                type="password"
                id="password"
                name="password"
                class="form-input"
                required
                minlength="6"
                placeholder="At least 6 characters"
              />
            </div>
          </div>

          <div class="input-group">
            <label for="confirm-password" class="input-label"
              >Confirm Password<span class="asterisk">*</span></label
            >
            <div class="input-wrapper">
              <input
                type="password"
                id="confirm-password"
                name="confirmPassword"
                class="form-input"
                required
                placeholder="Confirm your password"
              />
            </div>
          </div>

          <div class="terms-consent">
            <input
              type="checkbox"
              id="terms"
              name="terms"
              class="terms-checkbox"
              required
            />
            <label for="terms">
              I agree to USRad's <a href="/terms" target="_blank"
                >Terms of Service</a
              > and
              <a href="/privacy" target="_blank">Privacy Policy</a>. I
              understand that by joining the USRad network, I will receive
              communications about new opportunities and platform updates.
            </label>
          </div>

          <button type="submit" class="signup-button" id="signup-button">
            <span id="signup-text">Create Account & Join Network</span>
            <span id="signup-loading" style="display: none;"
              >Creating account...</span
            >
          </button>

          <div class="login-link">
            Already have an account? <a href="/login/imaginglogin"
              >Sign in here</a
            >
          </div>
        </form>
      </div>
    </div>

    <script>
      // Get environment variables passed from Astro
      const supabaseUrl = document.querySelector(
        'meta[name="supabase-url"]'
      )?.content;
      const supabaseAnonKey = document.querySelector(
        'meta[name="supabase-anon-key"]'
      )?.content;

      console.log("Environment check:", {
        url: supabaseUrl ? "Present" : "Missing",
        key: supabaseAnonKey ? "Present" : "Missing",
      });

      if (!supabaseUrl || !supabaseAnonKey) {
        console.error("Missing Supabase configuration");
        showError("Configuration error. Please contact support.");
      }

      // Load Supabase from CDN
      import("https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/+esm")
        .then(({ createClient }) => {
          const supabaseClient = createClient(supabaseUrl, supabaseAnonKey);

          // DOM elements
          const form = document.getElementById("signup-form");
          const errorDiv = document.getElementById("error-message");
          const successDiv = document.getElementById("success-message");
          const infoDiv = document.getElementById("info-message");
          const signupButton = document.getElementById("signup-button");
          const signupText = document.getElementById("signup-text");
          const signupLoading = document.getElementById("signup-loading");

          // Utility functions
          function showError(message) {
            errorDiv.textContent = message;
            errorDiv.classList.remove("hidden");
            successDiv.classList.add("hidden");
            infoDiv.classList.add("hidden");
          }

          function showSuccess(message) {
            successDiv.textContent = message;
            successDiv.classList.remove("hidden");
            errorDiv.classList.add("hidden");
            infoDiv.classList.add("hidden");
          }

          function showInfo(message) {
            infoDiv.textContent = message;
            infoDiv.classList.remove("hidden");
            errorDiv.classList.add("hidden");
            successDiv.classList.add("hidden");
          }

          function hideMessages() {
            errorDiv.classList.add("hidden");
            successDiv.classList.add("hidden");
            infoDiv.classList.add("hidden");
          }

          function setLoading(loading) {
            signupButton.disabled = loading;
            if (loading) {
              signupText.style.display = "none";
              signupLoading.style.display = "inline";
            } else {
              signupText.style.display = "inline";
              signupLoading.style.display = "none";
            }
          }

          // Main signup function
          // Find this function in your signup page and replace it:

          async function handleSignup(formData) {
            try {
              const { data, error } = await supabaseClient.auth.signUp({
                email: formData.email,
                password: formData.password,
                options: {
                  emailRedirectTo: "http://localhost:4321/auth/verified", // This forces the redirect
                  data: {
                    center_name: formData.centerName,
                    center_type: formData.centerType,
                    contact_name: formData.contactName,
                    phone: formData.phone,
                    user_type: "imaging_center",
                    onboarding_step: "email_verification",
                    psa_signed: false,
                    profile_complete: false,
                  },
                },
              });

              if (error) {
                throw error;
              }

              if (data.user) {
                if (!data.session) {
                  // Email verification required
                  showSuccess(
                    "Account created! Please check your email to verify, then you'll be automatically logged in."
                  );
                } else {
                  // No email verification required
                  showSuccess("Account created successfully! Taking you to your dashboard...");
                  setTimeout(() => {
                    window.location.href = "/dashboard";
                  }, 1500);
                }

                return { success: true, data };
              }
            } catch (error) {
              console.error("Signup error:", error);
              showError("Something went wrong during signup. Please try again.");
              return { success: false, error };


              // Handle specific error types
              if (error.message.includes("already registered")) {
                showError(
                  "An account with this email already exists. Please sign in instead."
                );
              } else if (error.message.includes("Password should be")) {
                showError("Password must be at least 6 characters long.");
              } else if (error.message.includes("Invalid email")) {
                showError("Please enter a valid email address.");
              } else {
                showError(
                  error.message || "Account creation failed. Please try again."
                );
              }

              return { success: false, error: error.message };
            }
          }

          // Form validation
          function validateForm(formData) {
            // Check required fields
            const requiredFields = [
              "centerName",
              "centerType",
              "contactName",
              "email",
              "phone",
              "password",
              "confirmPassword",
            ];
            for (const field of requiredFields) {
              if (!formData[field] || formData[field].trim() === "") {
                showError(
                  `Please fill in the ${field.replace(/([A-Z])/g, " $1").toLowerCase()} field.`
                );
                return false;
              }
            }

            // Check password confirmation
            if (formData.password !== formData.confirmPassword) {
              showError("Passwords do not match. Please check and try again.");
              return false;
            }

            // Check password length
            if (formData.password.length < 6) {
              showError("Password must be at least 6 characters long.");
              return false;
            }

            // Check email format
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(formData.email)) {
              showError("Please enter a valid email address.");
              return false;
            }

            // Check terms acceptance
            const termsCheckbox = document.getElementById("terms");
            if (!termsCheckbox.checked) {
              showError(
                "Please accept the Terms of Service and Privacy Policy to continue."
              );
              return false;
            }

            return true;
          }

          // Form submission handler
          form.addEventListener("submit", async (e) => {
            e.preventDefault();
            hideMessages();

            const formDataObj = new FormData(form);
            const formData = {
              centerName: formDataObj.get("centerName"),
              centerType: formDataObj.get("centerType"),
              contactName: formDataObj.get("contactName"),
              email: formDataObj.get("email"),
              phone: formDataObj.get("phone"),
              password: formDataObj.get("password"),
              confirmPassword: formDataObj.get("confirmPassword"),
            };

            // Validate form
            if (!validateForm(formData)) {
              return;
            }

            setLoading(true);

            // Attempt signup
            const result = await handleSignup(formData);

            setLoading(false);
          });

          // Phone number formatting
          document
            .getElementById("phone")
            .addEventListener("input", function (e) {
              let value = e.target.value.replace(/\D/g, "");
              if (value.length >= 6) {
                value = value.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
              } else if (value.length >= 3) {
                value = value.replace(/(\d{3})(\d{0,3})/, "($1) $2");
              }
              e.target.value = value;
            });

          // Check if user is already logged in
          window.addEventListener("load", async () => {
            try {
              const {
                data: { session },
              } = await supabaseClient.auth.getSession();

              if (session) {
                // User is already logged in, redirect to dashboard
                showInfo(
                  "You are already logged in. Redirecting to dashboard..."
                );
                setTimeout(() => {
                  window.location.href = "/dashboard";
                }, 2000);
              }
            } catch (error) {
              console.error("Session check error:", error);
              // Continue with signup page
            }
          });
        })
        .catch((error) => {
          console.error("Failed to load Supabase:", error);
          showError(
            "Failed to load authentication system. Please refresh the page."
          );
        });
    </script>
  </body>
</html>
