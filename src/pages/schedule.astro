---
import MainLayout from "../layouts/MainLayout.astro";
import Footer from "../components/Footer.astro";
import AOSInit from "../components/AOSInit.astro";
import centersData from "../data/centers.json";

// Get query parameters
const { searchParams } = Astro.url;
const centerName = searchParams.get('center') || '';
const studyType = searchParams.get('study') || '';

// Find center data
const center = centersData.find(c => c.name === centerName);
const price = center?.prices?.[studyType] || 0;

// Format today's date as YYYY-MM-DD (for min attribute on date inputs)
const today = new Date().toISOString().split('T')[0];
// Calculate max date (6 months from today)
const maxDate = new Date();
maxDate.setMonth(maxDate.getMonth() + 6);
const maxDateStr = maxDate.toISOString().split('T')[0];
---

<MainLayout>
  <slot slot="title">Schedule Your {studyType} at {centerName}</slot>
  <AOSInit />

  <div class="max-w-6xl mx-auto">
    <h1 class="text-3xl font-bold text-center text-[#003087] mb-8">Schedule Your Appointment</h1>

    <div class="flex flex-col md:flex-row gap-8" data-aos="fade-up" data-aos-duration="800">
      <!-- Summary Card (Left Column) -->
      <div class="w-full md:w-1/3">
        <div class="bg-white rounded-xl shadow-md p-6 border border-gray-100 sticky top-6">
          <h2 class="text-xl font-semibold mb-4 text-[#003087]">Appointment Summary</h2>
          
          <!-- Content with skeleton loader -->
          <div class="space-y-4" id="summary-content">
            <!-- Imaging Center (skeleton) -->
            <div>
              <p class="text-gray-500 text-sm">Imaging Center</p>
              <div class="skeleton-loader">
                <div class="h-6 bg-gray-300 rounded-md animate-pulse"></div>
              </div>
              <p class="font-semibold real-content hidden">{centerName}</p>
            </div>
            
            <!-- Study Type (skeleton) -->
            <div>
              <p class="text-gray-500 text-sm">Study Type</p>
              <div class="skeleton-loader">
                <div class="h-6 bg-gray-300 rounded-md animate-pulse w-3/4"></div>
              </div>
              <p class="font-semibold real-content hidden">{studyType}</p>
            </div>
            
            <!-- Price (skeleton) -->
            <div>
              <p class="text-gray-500 text-sm">Estimated Price</p>
              <div class="skeleton-loader">
                <div class="h-8 bg-gray-300 rounded-md animate-pulse w-1/3"></div>
              </div>
              <p class="text-xl font-bold text-green-600 real-content hidden">${price}</p>
              <p class="text-xs text-gray-500">All-inclusive cash price</p>
            </div>

            <div class="pt-3 border-t border-gray-100">
              <p class="text-sm text-gray-600">
                Your appointment will be scheduled based on availability. We'll contact you to confirm your appointment date and time.
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Appointment Form (Right Column) -->
      <div class="w-full md:w-2/3" data-aos="fade-up" data-aos-delay="100">
        <div class="bg-white rounded-xl shadow-md p-6 border border-gray-100">
          <h2 class="text-xl font-semibold mb-6 text-[#003087]">Patient Information</h2>
          
          <form id="appointment-form" class="space-y-5">
            <!-- Personal Information -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
              <div>
                <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">
                  Full Name *
                </label>
                <input 
                  type="text" 
                  id="fullName" 
                  name="fullName" 
                  required
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
              
              <div>
                <label for="dob" class="block text-sm font-medium text-gray-700 mb-1">
                  Date of Birth *
                </label>
                <input 
                  type="date" 
                  id="dob" 
                  name="dob" 
                  required
                  max={today}
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
              <div>
                <label for="gender" class="block text-sm font-medium text-gray-700 mb-1">
                  Gender
                </label>
                <select 
                  id="gender" 
                  name="gender"
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="" selected disabled>Select gender</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
                  <option value="other">Other</option>
                </select>
              </div>
              
              <div>
                <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">
                  Phone Number *
                </label>
                <input 
                  type="tel" 
                  id="phone" 
                  name="phone" 
                  required
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
            </div>

            <div>
              <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
                Email Address *
              </label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required
                class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            <!-- Appointment Preferences -->
            <div class="border-t border-gray-200 pt-5">
              <h3 class="text-lg font-medium text-gray-800 mb-4">Appointment Preferences</h3>
              
              <div class="grid grid-cols-1 md:grid-cols-2 gap-5">
                <div>
                  <label for="preferred-date" class="block text-sm font-medium text-gray-700 mb-1">
                    Preferred Date *
                  </label>
                  <input 
                    type="date" 
                    id="preferred-date" 
                    name="preferredDate" 
                    required
                    min={today}
                    max={maxDateStr}
                    class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
                
                <div>
                  <label for="alternate-date" class="block text-sm font-medium text-gray-700 mb-1">
                    Alternate Date
                  </label>
                  <input 
                    type="date" 
                    id="alternate-date" 
                    name="alternateDate"
                    min={today}
                    max={maxDateStr}
                    class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
              </div>

              <div class="mt-5">
                <label for="preferred-time" class="block text-sm font-medium text-gray-700 mb-1">
                  Preferred Time
                </label>
                <select 
                  id="preferred-time" 
                  name="preferredTime"
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="" selected disabled>Select preferred time</option>
                  <option value="morning">Morning (8am - 12pm)</option>
                  <option value="afternoon">Afternoon (12pm - 4pm)</option>
                  <option value="evening">Evening (4pm - 8pm)</option>
                </select>
              </div>
            </div>

            <!-- Referral Information -->
            <div class="border-t border-gray-200 pt-5">
              <h3 class="text-lg font-medium text-gray-800 mb-4">Referral Information</h3>
              
              <div>
                <label for="referral-method" class="block text-sm font-medium text-gray-700 mb-1">
                  How would you like to provide your referral?
                </label>
                <select 
                  id="referral-method" 
                  name="referralMethod"
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="" selected disabled>Select option</option>
                  <option value="upload">Upload Now</option>
                  <option value="email">Email Later</option>
                  <option value="fax">Fax</option>
                </select>
              </div>

              <div id="upload-container" class="mt-4 hidden">
                <label for="referral-file" class="block text-sm font-medium text-gray-700 mb-1">
                  Upload Referral
                </label>
                <input 
                  type="file" 
                  id="referral-file" 
                  name="referralFile"
                  class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
              </div>
            </div>

            <!-- Additional Notes -->
            <div class="border-t border-gray-200 pt-5">
              <label for="notes" class="block text-sm font-medium text-gray-700 mb-1">
                Additional Notes
              </label>
              <textarea 
                id="notes" 
                name="notes" 
                rows="4"
                class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                placeholder="Any special requests or information we should know..."
              ></textarea>
            </div>

            <!-- Submit Button -->
            <div class="pt-4">
              <button 
                type="submit" 
                class="w-full md:w-auto px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition duration-200 ease-in-out transform hover:scale-[1.01] focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50"
              >
                Request Appointment
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  <Footer />
</MainLayout>

<script>
  // Page initialization with skeleton loading effect
  document.addEventListener('DOMContentLoaded', () => {
    // Simulate loading delay (500-800ms)
    const loadingDelay = Math.floor(Math.random() * 300) + 500;
    
    // Show skeleton loaders initially
    const skeletonLoaders = document.querySelectorAll('.skeleton-loader');
    const realContent = document.querySelectorAll('.real-content');
    
    // After the simulated delay, hide skeletons and show actual content
    setTimeout(() => {
      skeletonLoaders.forEach(skeleton => {
        skeleton.classList.add('hidden');
      });
      
      realContent.forEach(content => {
        content.classList.remove('hidden');
      });
    }, loadingDelay);

    // Show/hide upload field based on referral method selection
    const referralMethodSelect = document.getElementById('referral-method');
    const uploadContainer = document.getElementById('upload-container');
    
    if (referralMethodSelect && uploadContainer) {
      referralMethodSelect.addEventListener('change', (e) => {
        if (e.target.value === 'upload') {
          uploadContainer.classList.remove('hidden');
        } else {
          uploadContainer.classList.add('hidden');
        }
      });
    }

    // Form submission
    const appointmentForm = document.getElementById('appointment-form');
    if (appointmentForm) {
      appointmentForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        // In a real application, you would submit the form data to your backend here
        // For now, just show a success message
        alert('Form submitted! We will contact you shortly to confirm your appointment.');
        
        // Optional: Reset the form
        appointmentForm.reset();
      });
    }
  });
</script>